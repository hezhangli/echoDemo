// Code generated by ent, DO NOT EDIT.

package ent

import (
	"echoDemo/ent/schema"
	"echoDemo/ent/userdemo"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userdemoFields := schema.UserDemo{}.Fields()
	_ = userdemoFields
	// userdemoDescCreatedAt is the schema descriptor for created_at field.
	userdemoDescCreatedAt := userdemoFields[4].Descriptor()
	// userdemo.DefaultCreatedAt holds the default value on creation for the created_at field.
	userdemo.DefaultCreatedAt = userdemoDescCreatedAt.Default.(func() time.Time)
	// userdemoDescUpdatedAt is the schema descriptor for updated_at field.
	userdemoDescUpdatedAt := userdemoFields[5].Descriptor()
	// userdemo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	userdemo.DefaultUpdatedAt = userdemoDescUpdatedAt.Default.(func() time.Time)
	// userdemo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	userdemo.UpdateDefaultUpdatedAt = userdemoDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userdemoDescID is the schema descriptor for id field.
	userdemoDescID := userdemoFields[0].Descriptor()
	// userdemo.DefaultID holds the default value on creation for the id field.
	userdemo.DefaultID = userdemoDescID.Default.(func() string)
}
